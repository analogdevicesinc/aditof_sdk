syntax = "proto3";

package payload;

enum Status
{
  OK = 0;
  BUSY = 1;
  UNREACHABLE = 2;
  INVALID_ARGUMENT = 3;
  UNAVAILABLE = 4;
  GENERIC_ERROR = 5;
}

enum ServerStatus
{
  REQUEST_ACCEPTED = 0;
  REQUEST_UNKNOWN = 1;
}

enum DeviceType
{
  LOCAL = 0;
  USB = 1;
  ETHERNET = 2;
}

enum SensorType
{
    SENSOR_96TOF1 = 0;
    SENSOR_CHICONY = 1;
}

message EepromConstructionData
{
  string driver_name = 10;
  string driver_path = 20;
}

message DeviceConstructionData
{
  DeviceType device_type = 10;                  // The type of a device
  string driver_path = 20;                      // Information about the driver the device is using
  repeated EepromConstructionData eeproms = 30; // Information about available eeproms
  repeated string temperature_sensors = 40;     // Temperature sensors names that are available
}

message FrameDetails
{
  uint32 width = 10;           // The width of the frame
  uint32 height = 20;          // The height of the frame
  string type = 30;            // The type of the frame
}

message ClientRequest
{
  string func_name = 10;                   // Name of an API function
  repeated int32 func_int32_param = 20;    // List of function parameters of type int32
  repeated float func_float_param = 30;    // List of function parameters of type float
  repeated bytes func_bytes_param = 40;    // List of function parameters of type byte-array
  bool expect_reply = 50;                  // Whether a response with data is expected or not
  FrameDetails frame_type = 60;            // Frame type information
  DeviceConstructionData device_data= 70;  // Device data required to instantiate a device on the server side
}

message ServerResponse
{
  string device_handle = 10;                         // The handle of the device
  Status status = 20;                                // Status of operation performed by the client request
  repeated int32 int32_payload = 30;                 // List of structures of type int32 for transporting data back to client
  repeated float float_payload = 40;                 // List of structures of type float for transporting data back to client
  repeated bytes bytes_payload = 50;                 // List of structures of type byte-array for transporting data back to client
  ServerStatus server_status = 60;                   // Status reported by server regarding the client request
  repeated FrameDetails available_frame_types = 70;  // List of supported frame types
  repeated DeviceConstructionData device_info = 80;  // List of information about existing devices on the same platform as the server
  SensorType sensor_type = 90;                       // The sensor type
  string message = 100;                              // Additional message (if any)
}
